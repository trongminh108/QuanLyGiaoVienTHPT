<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTimKiem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAA09JREFUWEft
        lUtME1EUhplpa2kFWpAWCoFCUUDRhYEoiUs3TKvhoZFHgUpppy19UNrSUgkSYnj4aMUELIgYBQRRIxGD
        iQkbolFMTNhrNBqNLlwYWGv0HDJDhldcOCQu+iffYs49557/nnvTxkQVVVRR8aFgm7fAaac9tOnsFUeT
        ua3ZZStklnZW3Rc6la0+90xZRemKrqx0vqKqatxopR8aGgzvHHb6QYvbEc+k8q+R4YHk3p6ut2dq9XN6
        k/l0ncWqq7fadAabTWuw2rQ1RqPf73NPM+n8a2py/F55VeWs3kzr9LRFi9RuoNnnGR69GTnGlPCn+fln
        6X2X+r67WlvLzS6Xtt5ixYYUmFgDv01Op+Hxo+lepow/LS6+LG9qds3hqK1ut9Yd8FO+c0HKEwxSLn8r
        Zfd6KVtLC+XwequezM7cZ8r404vnC6eCnZ1DNWZaC1dAbUdvONxxNXw5wpTxp/GxW1mh/tDTGhOtBRPr
        muL3KiYzNTYxvuRxO08wZfxqaLB/AcbvABPQbD3V0Pza9cHJYMC34LRbCaaEH9GmhriR4cGuJkvjj472
        wKIn4O+upa06aFpS3WguoZ0uRyh08VXA17xkt5mVTBk/Kj5adOhgQf6H0pPab8aGOo3N0iiFX74eaPax
        ze/5HBkIL9+9feP9ndFIsOt8MJYp40dFhYdLNdnqlaRE+ReNJvsIE16VyVhP+FocishASM6E+NP+/Fyi
        4EB+e2qK8pdcJnutVCrSmaUdEyEUCgi1OoPI3ZcjBabg1L/lctlEUlKiFCBIAYkP61/YVoRYLCY1miwy
        R5OVma3OfCNLiP8pS0hok0olApFIJIAcRMhBxIEbR9h8FpJhSxMYJJUKhSAvd29xeprqa3x83LJEEltO
        kiQ+KCmwG4gDEhhkAN47F4yx65iLNVgrAcTALgDNbTKBzoQkSYhVqpRKGPsnkVB4HGJ450jaNrDrbI4K
        SAVSAAWQDCQBrDn8i8YD4UTWhG4wgA4xATfKA3IANZABbGzANkHYb26Mbb4HYA2wU8E+eOB1QgN4jzgi
        TMCRsSNHUwh39H8D87AG67lXgOPf1By1+gYA9sFwHxP3obEmWXDT7WBzcA/cc8vGfAsPwiWq/1kxMX8A
        Mu3u4R8shqgAAAAASUVORK5CYII=
</value>
  </data>
</root>